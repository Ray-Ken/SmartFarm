version: '3'

services:

    zookeeper:
        image: wurstmeister/zookeeper
        networks:
          smartfarm_net:
            ipv4_address: 172.16.238.10
        ports:
          - "2181:2181"

    kafka:
        image: wurstmeister/kafka
        networks:
          smartfarm_net:
            ipv4_address: 172.16.238.11
        ports:
          - "9092:9092"
        environment:
          KAFKA_ADVERTISED_PORT: 9092
          KAFKA_ADVERTISED_HOST_NAME: 172.16.238.11
          KAFKA_ZOOKEEPER_CONNECT: 172.16.238.10:2181
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
        links:
          - zookeeper

    postgredb:
        image: postgres
        restart: always
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: smartfarm
        networks:
          smartfarm_net:
            ipv4_address: 172.16.238.12
        ports:
          - "5432:5432"

    mongo:
        image: 'mongo:latest'
        networks:
          smartfarm_net:
            ipv4_address: 172.16.238.15
        ports:
          - 27017:27017

    tomcat:
        image: tomcat
        restart: always
        networks:
          smartfarm_net:
            ipv4_address: 172.16.238.20
        ports:
          - "8080:8080"
        environment:
            - kafka_bootstrap_servers=172.16.238.11:9092
            - datasource_postgres_alerts=jdbc:postgresql://172.16.238.12:5432/
            - datasource_postgres=jdbc:postgresql://172.16.238.12:5432/
            - datasource_postgres_triggered_alerts=jdbc:postgresql://172.16.238.12:5432/
            - datasource_username=postgres
            - datasource_password=postgres
            - mongo_host=172.16.238.15
        volumes:
          - "./service-layer/target/ServiceLayer-0.0.1-SNAPSHOT.war:/usr/local/tomcat/webapps/ROOT.war"
          - "./service-layer/target/ServiceLayer-0.0.1-SNAPSHOT:/usr/local/tomcat/webapps/ROOT"
          - "./long-term-persistence/target/LongTermPersistence-0.0.1-SNAPSHOT.war:/usr/local/tomcat/webapps/persistence.war"
          - "./alerts-management/target/AlertsManagement-0.0.1-SNAPSHOT.war:/usr/local/tomcat/webapps/alerts.war"
          - "./alerts-management/target/AlertsManagement-0.0.1-SNAPSHOT:/usr/local/tomcat/webapps/alerts"
          - "./triggered-alerts/target/TriggeredAlerts-0.0.1-SNAPSHOT.war:/usr/local/tomcat/webapps/triggeredalerts.war"
          - "./triggered-alerts/target/TriggeredAlerts-0.0.1-SNAPSHOT:/usr/local/tomcat/webapps/triggeredalerts"
        depends_on:
          - kafka
          - mongo
          - postgredb

    nginx_proxy:
        image: nginx
        networks:
          smartfarm_net:
            ipv4_address: 172.16.238.30
        ports:
          - "8000:80"
        volumes:
          - ./nginx.conf:/etc/nginx/nginx.conf
        depends_on:
          - tomcat

    dashboard:
        build:
          context: ./dashboard
          dockerfile: Dockerfile
        volumes:
          - './dashboard:/usr/src/app'
          - '/usr/src/app/node_modules'
        networks:
          smartfarm_net:
            ipv4_address: 172.16.238.40
        ports:
          - '3000:3000'
        environment:
          - NODE_ENV=development
        depends_on:
         - nginx_proxy

networks:
    smartfarm_net:
        driver: bridge
        ipam:
          driver: default
          config:
          - subnet: 172.16.238.0/24

